find the lowest possible number of operations to solve the problem

input:	1 4 3 2 9
ft_atoi

Validation:
	No duplicates
	Integer range

Store in linked lists

calculation:
Algorithm comparison:



output: list of operations to execute the sort
fctn	putstr







Decision: Linked lists!!
store in llist or array:
comparison:
llist vs arrays
llist: more flexible, learning new concept
array: straight forward coding, reducing size requires more effort:

array:
	Operations:
		push
			- first value gets pushed to b
				temp_b = malloc(stack_b + 1)
				while (stack_b[i + 1])
					temp_b[i + 1]= stack_b[i];
				stack_b[0] = stack_a[0]
				free(stack_b);
				stack_b = temp_b
				temp_a = malloc(stack_a - 1)
				while (stack_a[i + 1])
					temp_a[i]= stack_a[i+1];
				free(stack_a);
				stack_a = temp_a;
		swap: easy
		rotate: easy

linkedlist:
	functions in place no to much malloc.

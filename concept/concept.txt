PPP Week goal:
Smart algorithm in place
Running program


TODO:
[x]	Requirements of the program
[x]	Find out smart sorting algorithms
[ ]	Think of mathematical syntax
[x]	create the environment (Main, necessitys)


Push Swap:

Concept:
- 2 Stacks with integers
- the first gets filled with unsorted ints
- then stuff that doesn't fit the current order gets pushed to b
Sol 1:
1	going top to bottom
2	high numbers go to bottom
3	low numbers go to stack B
4


Sorting algorithms:





8
3
4
7
9






Program:

1)	Input handling
		Input parsing
		Input validation
2)	Calculation
		Fill stack a
			Possible operations:
			sa	swap a:					rotate the first two elements of a
			sb	swap b:					rotate the first two elements of a
			ss	swap both:				sa & sb together count as one movement
			pa	push a:					push first element of a to top of b
			pb	push b:					push first element of b to top of a
			ra	rotate a:				all elements of a get put one up, top element of a becomes bottom
			rb	rotate b:				all elements of b get put one up, top element of b becomes bottom
			rr	rotate a & b:			ra & rb together
			rra reverse rotate a:		all elements of a get put one down, bottom element of a becomes top
			rrb	reverse rotate b:		all elements of b get put one down, bottom element of b becomes top
			rrr reverse	rotate a & b:	rra & rrb together

			cheapest movements: ss, rr, rrr
3)	Output
	ft_putstr
	On error:
		write

